{"version":3,"sources":["Tile.js","Tiles.js","App.js","reportWebVitals.js","index.js"],"names":["Tile","props","state","open","mouseOver","_clickHandler","bind","_mouseEnter","_mouseLeave","e","preventDefault","this","setState","tileStyle","width","height","position","top","left","margin","marginTop","marginLeft","boxShadow","transform","onMouseEnter","onMouseLeave","onClick","src","process","data","image","alt","name","style","React","Component","Tiles","className","map","id","ExtractData","val","i","forEach","row","push","Name","console","log","filteredData","filter","x","String","includes","replace","Dashboard","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oPAEqBA,E,kDACjB,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,MAAM,EACNC,WAAW,GAGf,EAAKC,cAAgB,EAAKA,cAAcC,KAAnB,gBACrB,EAAKC,YAAc,EAAKA,YAAYD,KAAjB,gBACnB,EAAKE,YAAc,EAAKA,YAAYF,KAAjB,gBATJ,E,+CAYnB,SAAYG,GACRA,EAAEC,kBAC2B,IAAzBC,KAAKT,MAAME,WAEXO,KAAKC,SAAS,CACVR,WAAW,M,yBAIvB,SAAYK,GACRA,EAAEC,kBAC2B,IAAzBC,KAAKT,MAAME,WACXO,KAAKC,SAAS,CACVR,WAAW,M,2BAIvB,SAAcK,GACVA,EAAEC,kBACsB,IAApBC,KAAKT,MAAMC,KACXQ,KAAKC,SAAS,CACVT,MAAM,IAGVQ,KAAKC,SAAS,CACVT,MAAM,M,oBAKlB,WAEI,IAAIU,EAAY,GAyBhB,OApBIA,EADAF,KAAKT,MAAMC,KACC,CACRW,MAAO,OACPC,OAAQ,OACRC,SAAU,WACVC,IAAK,MACLC,KAAM,MACNC,OAAQ,IACRC,UAAW,QACXC,WAAY,QACZC,UAAW,kCACXC,UAAW,QAGH,CACRT,MAAO,OACPC,OAAQ,QAOR,aADJ,CACI,OACIS,aAAcb,KAAKJ,YACnBkB,aAAcd,KAAKH,YACnBkB,QAASf,KAAKN,cACdsB,IAAKC,aAAyBjB,KAAKV,MAAM4B,KAAKC,MAC9CC,IAAKpB,KAAKV,MAAM4B,KAAKG,KACrBC,MAAOpB,Q,GA9EOqB,IAAMC,WCCnBC,E,4JACjB,WAGI,OACI,qBAAKC,UAAU,QAAf,SACK1B,KAAKV,MAAM4B,KAAKS,KAAI,SAACT,GAClB,OAAO,cAAC,EAAD,CAAMA,KAAMA,GAAWA,EAAKU,a,GAPpBL,IAAMC,W,aCSzC,IAAIN,EAAO,GAHFW,EAAYF,KAAI,SAACG,EAAKC,GAAN,OAAYD,KAO1BE,SAAQ,SAACC,GAElBf,EAAKgB,KAAK,CAERb,KAAKY,EAAIE,KACThB,MAAO,WAAac,EAAIE,KAAO,cAGnCC,QAAQC,IAAInB,GAGZ,IAAIoB,EAAepB,EAAKqB,QAAO,SAACC,GAU9B,OATGC,OAAOD,EAAEnB,MAAMqB,SAAS,kBACzBF,EAAEnB,KAAOmB,EAAEnB,KAAKsB,QAAQ,eAAgB,gBACxCH,EAAErB,MAAQqB,EAAErB,MAAMwB,QAAQ,eAAgB,iBAGzCF,OAAOD,EAAEnB,MAAMqB,SAAS,yBACzBF,EAAEnB,KAAOmB,EAAEnB,KAAKsB,QAAQ,sBAAuB,uBAC/CH,EAAErB,MAAQqB,EAAErB,MAAMwB,QAAQ,sBAAuB,wBAE5CH,KAGTJ,QAAQC,IAAIC,G,IAcNM,E,4JACJ,WACE,OACI,cAAC,EAAD,CAAO1B,KAAMlB,KAAKV,MAAM4B,W,GAHRK,IAAMC,WAcfqB,MANf,WACE,OACE,cAAC,EAAD,CAAW3B,KAAMoB,KCpDNQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.591dc27f.chunk.js","sourcesContent":["import React from 'react';\n\nexport default class Tile extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false,\n            mouseOver: false\n        };\n        // Bind properties to class instance\n        this._clickHandler = this._clickHandler.bind(this);\n        this._mouseEnter = this._mouseEnter.bind(this);\n        this._mouseLeave = this._mouseLeave.bind(this);\n    }\n    // Event handlers to modify state values\n    _mouseEnter(e) {\n        e.preventDefault();\n        if (this.state.mouseOver === false) {\n            // console.log(this.props.data.name);\n            this.setState({\n                mouseOver: true\n            })\n        }\n    }\n    _mouseLeave(e) {\n        e.preventDefault();\n        if (this.state.mouseOver === true) {\n            this.setState({\n                mouseOver: false\n            })\n        }\n    }\n    _clickHandler(e) {\n        e.preventDefault();\n        if (this.state.open === false) {\n            this.setState({\n                open: true\n            });\n        } else {\n            this.setState({\n                open: false\n            });\n        }\n    }\n\n    render() {\n        // Modify styles based on state values\n        let tileStyle = {};\n        let headerStyle = {};\n        let zoom = {};\n        // When tile clicked\n        if (this.state.open) {\n            tileStyle = {\n                width: '62vw',\n                height: '62vw',\n                position: 'absolute',\n                top: '50%',\n                left: '50%',\n                margin: '0',\n                marginTop: '-31vw',\n                marginLeft: '-31vw',\n                boxShadow: '0 0 40px 5px rgba(0, 0, 0, 0.3)',\n                transform: 'none'\n            };\n        } else {\n            tileStyle = {\n                width: '25vw',\n                height: '18vw'\n            };\n        }\n\n        // console.log(process.env.PUBLIC_URL + this.props.data.image);\n        return (\n            // <div className=\"tile\">\n                <img\n                    onMouseEnter={this._mouseEnter}\n                    onMouseLeave={this._mouseLeave}\n                    onClick={this._clickHandler}\n                    src={process.env.PUBLIC_URL + this.props.data.image}\n                    alt={this.props.data.name}\n                    style={tileStyle}\n                />\n            // </div>\n        );\n    }\n}\n\n\n","import React from 'react';\nimport Tile from './Tile'\n\nexport default class Tiles extends React.Component {\n    render() {\n        // Create tile for each item in data array\n        // Pass data to each tile and assign a key\n        return (\n            <div className=\"tiles\">\n                {this.props.data.map((data) => {\n                    return <Tile data={data} key={data.id} />\n                })}\n            </div>\n        );\n    }\n}","import React from 'react';\nimport Tiles from './Tiles'\nimport ExtractData from \"./data/extracted.json\"\nimport './App.css';\n\n\n// process.env.PUBLIC_URL\n\nfunction readJSON(){\n  return ExtractData.map((val, i) => val);\n}\n\nlet data = [];\n\nconst data_array = readJSON();\n\ndata_array.forEach((row)=>{\n\n  data.push({\n    // id:0,\n    name:row.Name,\n    image: \"/images/\" + row.Name + \"_0.gif\"\n  });\n});\nconsole.log(data);\n\n// eslint-disable-next-line array-callback-return\nlet filteredData = data.filter((x) => {\n  if(String(x.name).includes(\"Sword_Shield\")){\n    x.name = x.name.replace(\"Sword_Shield\", \"Sword&Shield\");\n    x.image = x.image.replace(\"Sword_Shield\", \"Sword&Shield\");\n  }\n\n  if(String(x.name).includes(\"Sword_Attack_SP_RLd\")){\n    x.name = x.name.replace(\"Sword_Attack_SP_RLd\", \"Sword_Attack_Sp_RLd\");\n    x.image = x.image.replace(\"Sword_Attack_SP_RLd\", \"Sword_Attack_Sp_RLd\");\n  }\n  return x;\n});\n\nconsole.log(filteredData);\n\n\n\n// const data = [\n//   {\n//     id: 1,\n//     name: \"hi\",\n//     image: \"/images/2Hand-Sword-Attack1_0.gif\"\n//   },\n//\n// ];\n\n\nclass Dashboard extends React.Component {\n  render() {\n    return (\n        <Tiles data={this.props.data} />\n    );\n  }\n}\n\nfunction App() {\n  return (\n    <Dashboard data={filteredData} />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}